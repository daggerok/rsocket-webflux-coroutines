name: CI
on:
  workflow_dispatch:
    inputs:
      trigger:
        description: Type m to triggre manual jobs
        required: false
        default: ''
  pull_request:
    branches: [ main, master ]
  push:
env:
  JAVA_VERSION: 1.8
jobs:
  tests:
    if: github.event.inputs.trigger == ''
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      id: ci
      with:
        path: |
          ~/.npm
          ~/.node
          ~/.local
          ~/.gradle
          ~/.docker
          ~/.m2/repository
          !~/.m2/repository/com/gituhb/daggerok
        key: ${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
    - uses: actions/setup-node@v2
    - uses: actions/setup-java@v1
      with:
        java-version: ${{ env.JAVA_VERSION }}
    - run: cd $GITHUB_WORKSPACE ; ./mvnw -B dependency:resolve dependency:resolve-plugins
    - run: cd $GITHUB_WORKSPACE ; ./mvnw -q
    - run: sudo apt install -y curl jq
    - run: |
        ./mvnw -f reactor-service     spring-boot:start
        ./mvnw -f coroutines-service  spring-boot:start
        ./mvnw -f web-service         spring-boot:start
        ./mvnw -f edge-service        spring-boot:start

        curl -sS 0:8004/api/messages | jq .
        curl -sS -H'Content-Type:application/json' -d'{"data":"Hey..."}' 0:8004/api/messages
        curl -isS 0:8004/api/messages/3

        ./mvnw -f edge-service        spring-boot:stop
        ./mvnw -f web-service         spring-boot:stop
        ./mvnw -f coroutines-service  spring-boot:stop
        ./mvnw -f reactor-service     spring-boot:stop
  dependency-updates:
    if: contains(github.event.inputs.trigger, 'M')
      || startsWith(github.event.inputs.trigger, 'm')
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - run: |
        echo "Trigger: ${{ github.event.inputs.trigger }}"
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      id: ci
      with:
        path: |
          ~/.npm
          ~/.node
          ~/.local
          ~/.gradle
          ~/.docker
          ~/.m2/repository
          !~/.m2/repository/com/gituhb/daggerok
        key: ${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
    - uses: actions/setup-java@v1
      with:
        java-version: ${{ env.JAVA_VERSION }}
    - run: cd $GITHUB_WORKSPACE ; ./mvnw versions:display-plugin-updates
    - run: cd $GITHUB_WORKSPACE ; ./mvnw versions:display-property-updates
    - run: cd $GITHUB_WORKSPACE ; ./mvnw versions:display-parent-updates
